import{_ as e,c as t,o as r,a0 as l}from"./chunks/framework.Cl3KOctt.js";const u=JSON.parse('{"title":"测试元素 API","description":"","frontmatter":{},"headers":[],"relativePath":"developer/api/test-element.md","filePath":"developer/api/test-element.md","lastUpdated":1756736247000}'),o={name:"developer/api/test-element.md"};function i(s,a,d,h,n,c){return r(),t("div",null,[...a[0]||(a[0]=[l('<h1 id="测试元素-api" tabindex="-1">测试元素 API <a class="header-anchor" href="#测试元素-api" aria-label="Permalink to &quot;测试元素 API&quot;">​</a></h1><p>测试元素API涵盖了所有测试组件的接口和实现，包括取样器、处理器、配置元件等。</p><h2 id="测试元素基础类" tabindex="-1">测试元素基础类 <a class="header-anchor" href="#测试元素基础类" aria-label="Permalink to &quot;测试元素基础类&quot;">​</a></h2><h3 id="testelement-类" tabindex="-1">TestElement 类 <a class="header-anchor" href="#testelement-类" aria-label="Permalink to &quot;TestElement 类&quot;">​</a></h3><p>所有测试元素的基类，提供了通用的属性和方法。</p><h4 id="主要属性" tabindex="-1">主要属性 <a class="header-anchor" href="#主要属性" aria-label="Permalink to &quot;主要属性&quot;">​</a></h4><ul><li><code>title</code>: 元素标题</li><li><code>variables</code>: 变量映射</li><li><code>context</code>: 执行上下文</li></ul><h4 id="主要方法" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>execute(Context context)</code>: 执行测试元素</li><li><code>getTitle()</code>: 获取标题</li><li><code>getVariables()</code>: 获取变量映射</li></ul><h2 id="取样器-api" tabindex="-1">取样器 API <a class="header-anchor" href="#取样器-api" aria-label="Permalink to &quot;取样器 API&quot;">​</a></h2><h3 id="sampler-接口" tabindex="-1">Sampler 接口 <a class="header-anchor" href="#sampler-接口" aria-label="Permalink to &quot;Sampler 接口&quot;">​</a></h3><p>取样器接口，定义了执行测试操作的方法。</p><h4 id="主要方法-1" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-1" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>sample(Context context)</code>: 执行取样操作</li></ul><h3 id="httpsampler-类" tabindex="-1">HttpSampler 类 <a class="header-anchor" href="#httpsampler-类" aria-label="Permalink to &quot;HttpSampler 类&quot;">​</a></h3><p>HTTP取样器实现，用于发送HTTP请求。</p><h3 id="dubbosampler-类" tabindex="-1">DubboSampler 类 <a class="header-anchor" href="#dubbosampler-类" aria-label="Permalink to &quot;DubboSampler 类&quot;">​</a></h3><p>Dubbo取样器实现，用于调用Dubbo服务。</p><h3 id="jdbcsampler-类" tabindex="-1">JdbcSampler 类 <a class="header-anchor" href="#jdbcsampler-类" aria-label="Permalink to &quot;JdbcSampler 类&quot;">​</a></h3><p>JDBC取样器实现，用于执行数据库查询。</p><h3 id="redissampler-类" tabindex="-1">RedisSampler 类 <a class="header-anchor" href="#redissampler-类" aria-label="Permalink to &quot;RedisSampler 类&quot;">​</a></h3><p>Redis取样器实现，用于执行Redis命令。</p><h3 id="kafkasampler-类" tabindex="-1">KafkaSampler 类 <a class="header-anchor" href="#kafkasampler-类" aria-label="Permalink to &quot;KafkaSampler 类&quot;">​</a></h3><p>Kafka取样器实现，用于发送Kafka消息。</p><h3 id="rabbitmqsampler-类" tabindex="-1">RabbitMQSampler 类 <a class="header-anchor" href="#rabbitmqsampler-类" aria-label="Permalink to &quot;RabbitMQSampler 类&quot;">​</a></h3><p>RabbitMQ取样器实现，用于发送RabbitMQ消息。</p><h3 id="activemqsampler-类" tabindex="-1">ActiveMQSampler 类 <a class="header-anchor" href="#activemqsampler-类" aria-label="Permalink to &quot;ActiveMQSampler 类&quot;">​</a></h3><p>ActiveMQ取样器实现，用于发送ActiveMQ消息。</p><h3 id="mongosampler-类" tabindex="-1">MongoSampler 类 <a class="header-anchor" href="#mongosampler-类" aria-label="Permalink to &quot;MongoSampler 类&quot;">​</a></h3><p>MongoDB取样器实现，用于执行MongoDB操作。</p><h2 id="处理器-api" tabindex="-1">处理器 API <a class="header-anchor" href="#处理器-api" aria-label="Permalink to &quot;处理器 API&quot;">​</a></h2><h3 id="processor-接口" tabindex="-1">Processor 接口 <a class="header-anchor" href="#processor-接口" aria-label="Permalink to &quot;Processor 接口&quot;">​</a></h3><p>处理器接口，定义了在测试执行前后处理数据的方法。</p><h4 id="主要方法-2" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-2" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>process(Context context)</code>: 执行处理逻辑</li></ul><h3 id="preprocessor-类" tabindex="-1">Preprocessor 类 <a class="header-anchor" href="#preprocessor-类" aria-label="Permalink to &quot;Preprocessor 类&quot;">​</a></h3><p>前置处理器，用于在测试执行前准备数据。</p><h3 id="postprocessor-类" tabindex="-1">Postprocessor 类 <a class="header-anchor" href="#postprocessor-类" aria-label="Permalink to &quot;Postprocessor 类&quot;">​</a></h3><p>后置处理器，用于在测试执行后清理数据。</p><h2 id="配置元件-api" tabindex="-1">配置元件 API <a class="header-anchor" href="#配置元件-api" aria-label="Permalink to &quot;配置元件 API&quot;">​</a></h2><h3 id="configureelement-接口" tabindex="-1">ConfigureElement 接口 <a class="header-anchor" href="#configureelement-接口" aria-label="Permalink to &quot;ConfigureElement 接口&quot;">​</a></h3><p>配置元件接口，用于为测试元素提供默认配置。</p><h4 id="主要方法-3" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-3" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>apply(TestElement element)</code>: 应用配置到测试元素</li></ul><h3 id="httpdefaults-类" tabindex="-1">HttpDefaults 类 <a class="header-anchor" href="#httpdefaults-类" aria-label="Permalink to &quot;HttpDefaults 类&quot;">​</a></h3><p>HTTP默认配置元件。</p><h3 id="dubbodefaults-类" tabindex="-1">DubboDefaults 类 <a class="header-anchor" href="#dubbodefaults-类" aria-label="Permalink to &quot;DubboDefaults 类&quot;">​</a></h3><p>Dubbo默认配置元件。</p><h3 id="jdbcdefaults-类" tabindex="-1">JdbcDefaults 类 <a class="header-anchor" href="#jdbcdefaults-类" aria-label="Permalink to &quot;JdbcDefaults 类&quot;">​</a></h3><p>JDBC默认配置元件。</p><h3 id="redisdefaults-类" tabindex="-1">RedisDefaults 类 <a class="header-anchor" href="#redisdefaults-类" aria-label="Permalink to &quot;RedisDefaults 类&quot;">​</a></h3><p>Redis默认配置元件。</p><h3 id="kafkadefaults-类" tabindex="-1">KafkaDefaults 类 <a class="header-anchor" href="#kafkadefaults-类" aria-label="Permalink to &quot;KafkaDefaults 类&quot;">​</a></h3><p>Kafka默认配置元件。</p><h3 id="rabbitdefaults-类" tabindex="-1">RabbitDefaults 类 <a class="header-anchor" href="#rabbitdefaults-类" aria-label="Permalink to &quot;RabbitDefaults 类&quot;">​</a></h3><p>RabbitMQ默认配置元件。</p><h3 id="activedefaults-类" tabindex="-1">ActiveDefaults 类 <a class="header-anchor" href="#activedefaults-类" aria-label="Permalink to &quot;ActiveDefaults 类&quot;">​</a></h3><p>ActiveMQ默认配置元件。</p><h3 id="mongodefaults-类" tabindex="-1">MongoDefaults 类 <a class="header-anchor" href="#mongodefaults-类" aria-label="Permalink to &quot;MongoDefaults 类&quot;">​</a></h3><p>MongoDB默认配置元件。</p>',60)])])}const b=e(o,[["render",i]]);export{u as __pageData,b as default};
