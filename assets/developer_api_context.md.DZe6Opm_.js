import{_ as i,c as s,o as t,ae as e}from"./chunks/framework.DYNmYxAK.js";const E=JSON.parse('{"title":"上下文与变量 API","description":"","frontmatter":{},"headers":[],"relativePath":"developer/api/context.md","filePath":"developer/api/context.md","lastUpdated":1756736247000}'),n={name:"developer/api/context.md"};function l(h,a,r,p,k,o){return t(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="上下文与变量-api" tabindex="-1">上下文与变量 API <a class="header-anchor" href="#上下文与变量-api" aria-label="Permalink to &quot;上下文与变量 API&quot;">​</a></h1><p>上下文与变量API管理测试执行过程中的变量和上下文信息，提供了动态数据管理和作用域控制功能。</p><h2 id="context-接口" tabindex="-1">Context 接口 <a class="header-anchor" href="#context-接口" aria-label="Permalink to &quot;Context 接口&quot;">​</a></h2><p>执行上下文接口，用于在测试执行过程中存储和传递数据。</p><h3 id="主要方法" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法" aria-label="Permalink to &quot;主要方法&quot;">​</a></h3><h4 id="put-string-name-object-value" tabindex="-1">put(String name, Object value) <a class="header-anchor" href="#put-string-name-object-value" aria-label="Permalink to &quot;put(String name, Object value)&quot;">​</a></h4><p>将变量存储到上下文中。</p><h4 id="get-string-name" tabindex="-1">get(String name) <a class="header-anchor" href="#get-string-name" aria-label="Permalink to &quot;get(String name)&quot;">​</a></h4><p>从上下文中获取变量值。</p><h4 id="remove-string-name" tabindex="-1">remove(String name) <a class="header-anchor" href="#remove-string-name" aria-label="Permalink to &quot;remove(String name)&quot;">​</a></h4><p>从上下文中移除变量。</p><h4 id="containskey-string-name" tabindex="-1">containsKey(String name) <a class="header-anchor" href="#containskey-string-name" aria-label="Permalink to &quot;containsKey(String name)&quot;">​</a></h4><p>检查上下文中是否包含指定变量。</p><h4 id="getvariables" tabindex="-1">getVariables() <a class="header-anchor" href="#getvariables" aria-label="Permalink to &quot;getVariables()&quot;">​</a></h4><p>获取所有变量的映射。</p><h4 id="clone" tabindex="-1">clone() <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;clone()&quot;">​</a></h4><p>克隆上下文对象。</p><h2 id="variablemanager-类" tabindex="-1">VariableManager 类 <a class="header-anchor" href="#variablemanager-类" aria-label="Permalink to &quot;VariableManager 类&quot;">​</a></h2><p>变量管理器，负责处理变量的解析和替换。</p><h3 id="主要方法-1" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-1" aria-label="Permalink to &quot;主要方法&quot;">​</a></h3><h4 id="resolve-string-expression-context-context" tabindex="-1">resolve(String expression, Context context) <a class="header-anchor" href="#resolve-string-expression-context-context" aria-label="Permalink to &quot;resolve(String expression, Context context)&quot;">​</a></h4><p>解析表达式中的变量引用并替换为实际值。</p><h4 id="evaluate-string-expression-context-context" tabindex="-1">evaluate(String expression, Context context) <a class="header-anchor" href="#evaluate-string-expression-context-context" aria-label="Permalink to &quot;evaluate(String expression, Context context)&quot;">​</a></h4><p>计算表达式的值。</p><h4 id="registerfunction-string-name-function-function" tabindex="-1">registerFunction(String name, Function function) <a class="header-anchor" href="#registerfunction-string-name-function-function" aria-label="Permalink to &quot;registerFunction(String name, Function function)&quot;">​</a></h4><p>注册自定义函数。</p><h2 id="内置变量" tabindex="-1">内置变量 <a class="header-anchor" href="#内置变量" aria-label="Permalink to &quot;内置变量&quot;">​</a></h2><h3 id="测试相关变量" tabindex="-1">测试相关变量 <a class="header-anchor" href="#测试相关变量" aria-label="Permalink to &quot;测试相关变量&quot;">​</a></h3><ul><li><code>\${test.id}</code>: 测试ID</li><li><code>\${test.title}</code>: 测试标题</li><li><code>\${test.timestamp}</code>: 测试时间戳</li></ul><h3 id="系统变量" tabindex="-1">系统变量 <a class="header-anchor" href="#系统变量" aria-label="Permalink to &quot;系统变量&quot;">​</a></h3><ul><li><code>\${system.timestamp}</code>: 系统时间戳</li><li><code>\${system.date}</code>: 系统日期</li><li><code>\${system.uuid}</code>: UUID生成器</li></ul><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h3><ul><li><code>\${env.VARIABLE_NAME}</code>: 环境变量值</li></ul><h2 id="内置函数" tabindex="-1">内置函数 <a class="header-anchor" href="#内置函数" aria-label="Permalink to &quot;内置函数&quot;">​</a></h2><h3 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-label="Permalink to &quot;字符串函数&quot;">​</a></h3><ul><li><code>upper(value)</code>: 转换为大写</li><li><code>lower(value)</code>: 转换为小写</li><li><code>trim(value)</code>: 去除首尾空格</li><li><code>substring(value, start, end)</code>: 截取子字符串</li></ul><h3 id="数学函数" tabindex="-1">数学函数 <a class="header-anchor" href="#数学函数" aria-label="Permalink to &quot;数学函数&quot;">​</a></h3><ul><li><code>randomInt(min, max)</code>: 生成随机整数</li><li><code>randomFloat(min, max)</code>: 生成随机浮点数</li><li><code>round(value, decimals)</code>: 四舍五入</li></ul><h3 id="日期函数" tabindex="-1">日期函数 <a class="header-anchor" href="#日期函数" aria-label="Permalink to &quot;日期函数&quot;">​</a></h3><ul><li><code>now()</code>: 当前时间</li><li><code>formatDate(date, pattern)</code>: 格式化日期</li><li><code>addDays(date, days)</code>: 增加天数</li></ul><h3 id="json函数" tabindex="-1">JSON函数 <a class="header-anchor" href="#json函数" aria-label="Permalink to &quot;JSON函数&quot;">​</a></h3><ul><li><code>toJson(object)</code>: 转换为JSON字符串</li><li><code>parseJson(json)</code>: 解析JSON字符串</li></ul><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="变量定义和使用" tabindex="-1">变量定义和使用 <a class="header-anchor" href="#变量定义和使用" aria-label="Permalink to &quot;变量定义和使用&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在测试套件中定义变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">suite.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;userId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">suite.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;userName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在取样器中使用变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/users/\${userId}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${userName}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="动态表达式求值" tabindex="-1">动态表达式求值 <a class="header-anchor" href="#动态表达式求值" aria-label="Permalink to &quot;动态表达式求值&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用函数和表达式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/orders&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;orderId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${randomInt(1000, 9999)}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${now()}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;customerName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${upper(\${userName})}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="变量提取和传递" tabindex="-1">变量提取和传递 <a class="header-anchor" href="#变量提取和传递" aria-label="Permalink to &quot;变量提取和传递&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从前一个请求中提取数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extractors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(extract </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> extract</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orderId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;authToken&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在后续请求中使用提取的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bearer \${authToken}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/orders/\${orderId}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,49)])])}const c=i(n,[["render",l]]);export{E as __pageData,c as default};
