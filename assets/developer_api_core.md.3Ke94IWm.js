import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.B2RX65tY.js";const c=JSON.parse('{"title":"核心 API","description":"","frontmatter":{},"headers":[],"relativePath":"developer/api/core.md","filePath":"developer/api/core.md","lastUpdated":1756736247000}'),n={name:"developer/api/core.md"};function l(p,s,r,h,o,d){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="核心-api" tabindex="-1">核心 API <a class="header-anchor" href="#核心-api" aria-label="Permalink to &quot;核心 API&quot;">​</a></h1><p>核心API提供了Ryze框架的基础功能，包括测试套件的创建、变量管理、配置元素等。</p><h2 id="magicbox-类" tabindex="-1">MagicBox 类 <a class="header-anchor" href="#magicbox-类" aria-label="Permalink to &quot;MagicBox 类&quot;">​</a></h2><p>MagicBox是Ryze框架的核心入口类，提供了创建各种测试元素的方法。</p><h3 id="方法列表" tabindex="-1">方法列表 <a class="header-anchor" href="#方法列表" aria-label="Permalink to &quot;方法列表&quot;">​</a></h3><h4 id="suite-string-title-consumer-lt-suitebuilder-gt-consumer" tabindex="-1">suite(String title, Consumer&lt;SuiteBuilder&gt; consumer) <a class="header-anchor" href="#suite-string-title-consumer-lt-suitebuilder-gt-consumer" aria-label="Permalink to &quot;suite(String title, Consumer&amp;lt;SuiteBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个测试套件。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">suite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试套件名称&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, suite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置测试套件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="http-consumer-lt-httpsamplerbuilder-gt-consumer" tabindex="-1">http(Consumer&lt;HttpSamplerBuilder&gt; consumer) <a class="header-anchor" href="#http-consumer-lt-httpsamplerbuilder-gt-consumer" aria-label="Permalink to &quot;http(Consumer&amp;lt;HttpSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个HTTP取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(http </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置HTTP取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="dubbo-consumer-lt-dubbosamplerbuilder-gt-consumer" tabindex="-1">dubbo(Consumer&lt;DubboSamplerBuilder&gt; consumer) <a class="header-anchor" href="#dubbo-consumer-lt-dubbosamplerbuilder-gt-consumer" aria-label="Permalink to &quot;dubbo(Consumer&amp;lt;DubboSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个Dubbo取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dubbo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dubbo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置Dubbo取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="jdbc-consumer-lt-jdbcsamplerbuilder-gt-consumer" tabindex="-1">jdbc(Consumer&lt;JdbcSamplerBuilder&gt; consumer) <a class="header-anchor" href="#jdbc-consumer-lt-jdbcsamplerbuilder-gt-consumer" aria-label="Permalink to &quot;jdbc(Consumer&amp;lt;JdbcSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个JDBC取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jdbc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jdbc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置JDBC取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="redis-consumer-lt-redissamplerbuilder-gt-consumer" tabindex="-1">redis(Consumer&lt;RedisSamplerBuilder&gt; consumer) <a class="header-anchor" href="#redis-consumer-lt-redissamplerbuilder-gt-consumer" aria-label="Permalink to &quot;redis(Consumer&amp;lt;RedisSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个Redis取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(redis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置Redis取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="kafka-consumer-lt-kafkasamplerbuilder-gt-consumer" tabindex="-1">kafka(Consumer&lt;KafkaSamplerBuilder&gt; consumer) <a class="header-anchor" href="#kafka-consumer-lt-kafkasamplerbuilder-gt-consumer" aria-label="Permalink to &quot;kafka(Consumer&amp;lt;KafkaSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个Kafka取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(kafka </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置Kafka取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="rabbitmq-consumer-lt-rabbitmqsamplerbuilder-gt-consumer" tabindex="-1">rabbitmq(Consumer&lt;RabbitMQSamplerBuilder&gt; consumer) <a class="header-anchor" href="#rabbitmq-consumer-lt-rabbitmqsamplerbuilder-gt-consumer" aria-label="Permalink to &quot;rabbitmq(Consumer&amp;lt;RabbitMQSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个RabbitMQ取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rabbitmq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rabbitmq </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置RabbitMQ取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="activemq-consumer-lt-activemqsamplerbuilder-gt-consumer" tabindex="-1">activemq(Consumer&lt;ActiveMQSamplerBuilder&gt; consumer) <a class="header-anchor" href="#activemq-consumer-lt-activemqsamplerbuilder-gt-consumer" aria-label="Permalink to &quot;activemq(Consumer&amp;lt;ActiveMQSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个ActiveMQ取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activemq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(activemq </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置ActiveMQ取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="mongo-consumer-lt-mongosamplerbuilder-gt-consumer" tabindex="-1">mongo(Consumer&lt;MongoSamplerBuilder&gt; consumer) <a class="header-anchor" href="#mongo-consumer-lt-mongosamplerbuilder-gt-consumer" aria-label="Permalink to &quot;mongo(Consumer&amp;lt;MongoSamplerBuilder&amp;gt; consumer)&quot;">​</a></h4><p>创建一个MongoDB取样器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MagicBox.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mongo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mongo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置MongoDB取样器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,32)])])}const u=a(n,[["render",l]]);export{c as __pageData,u as default};
