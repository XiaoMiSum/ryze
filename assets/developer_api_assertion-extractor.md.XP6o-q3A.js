import{_ as i,c as s,o as e,a0 as t}from"./chunks/framework.Cl3KOctt.js";const c=JSON.parse('{"title":"断言与提取器 API","description":"","frontmatter":{},"headers":[],"relativePath":"developer/api/assertion-extractor.md","filePath":"developer/api/assertion-extractor.md","lastUpdated":1756736247000}'),l={name:"developer/api/assertion-extractor.md"};function n(r,a,h,o,d,p){return e(),s("div",null,[...a[0]||(a[0]=[t(`<h1 id="断言与提取器-api" tabindex="-1">断言与提取器 API <a class="header-anchor" href="#断言与提取器-api" aria-label="Permalink to &quot;断言与提取器 API&quot;">​</a></h1><p>断言与提取器API提供了验证和数据提取功能，是测试结果处理的核心组件。</p><h2 id="断言-api" tabindex="-1">断言 API <a class="header-anchor" href="#断言-api" aria-label="Permalink to &quot;断言 API&quot;">​</a></h2><h3 id="assertion-接口" tabindex="-1">Assertion 接口 <a class="header-anchor" href="#assertion-接口" aria-label="Permalink to &quot;Assertion 接口&quot;">​</a></h3><p>断言接口，定义了验证测试结果的方法。</p><h4 id="主要方法" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>validate(Object actual, Object expected, String rule)</code>: 验证实际值是否符合预期</li><li><code>getDescription()</code>: 获取断言描述</li></ul><h3 id="abstractassertion-抽象类" tabindex="-1">AbstractAssertion 抽象类 <a class="header-anchor" href="#abstractassertion-抽象类" aria-label="Permalink to &quot;AbstractAssertion 抽象类&quot;">​</a></h3><p>断言基类，提供了通用的断言实现。</p><h3 id="jsonassertion-类" tabindex="-1">JsonAssertion 类 <a class="header-anchor" href="#jsonassertion-类" aria-label="Permalink to &quot;JsonAssertion 类&quot;">​</a></h3><p>JSON断言实现，用于验证JSON格式的响应数据。</p><h4 id="主要方法-1" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-1" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>validateJson(String jsonPath, Object expected, String rule)</code>: 验证JSON路径表达式的值</li></ul><h3 id="httpresponseassertion-类" tabindex="-1">HttpResponseAssertion 类 <a class="header-anchor" href="#httpresponseassertion-类" aria-label="Permalink to &quot;HttpResponseAssertion 类&quot;">​</a></h3><p>HTTP响应断言实现，用于验证HTTP响应状态码和头部信息。</p><h4 id="主要方法-2" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-2" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>validateStatus(int expectedStatus)</code>: 验证HTTP状态码</li><li><code>validateHeader(String headerName, Object expectedValue, String rule)</code>: 验证HTTP头部</li></ul><h3 id="内置断言规则" tabindex="-1">内置断言规则 <a class="header-anchor" href="#内置断言规则" aria-label="Permalink to &quot;内置断言规则&quot;">​</a></h3><h4 id="相等性断言" tabindex="-1">相等性断言 <a class="header-anchor" href="#相等性断言" aria-label="Permalink to &quot;相等性断言&quot;">​</a></h4><ul><li><code>==</code>: 等于</li><li><code>!=</code>: 不等于</li></ul><h4 id="比较断言" tabindex="-1">比较断言 <a class="header-anchor" href="#比较断言" aria-label="Permalink to &quot;比较断言&quot;">​</a></h4><ul><li><code>&amp;gt;</code>: 大于</li><li><code>&amp;gt;=</code>: 大于等于</li><li><code>&amp;lt;</code>: 小于</li><li><code>&amp;lt;=</code>: 小于等于</li></ul><h4 id="包含性断言" tabindex="-1">包含性断言 <a class="header-anchor" href="#包含性断言" aria-label="Permalink to &quot;包含性断言&quot;">​</a></h4><ul><li><code>contains</code>: 包含</li><li><code>notContains</code>: 不包含</li></ul><h4 id="正则断言" tabindex="-1">正则断言 <a class="header-anchor" href="#正则断言" aria-label="Permalink to &quot;正则断言&quot;">​</a></h4><ul><li><code>regex</code>: 正则匹配</li></ul><h2 id="提取器-api" tabindex="-1">提取器 API <a class="header-anchor" href="#提取器-api" aria-label="Permalink to &quot;提取器 API&quot;">​</a></h2><h3 id="extractor-接口" tabindex="-1">Extractor 接口 <a class="header-anchor" href="#extractor-接口" aria-label="Permalink to &quot;Extractor 接口&quot;">​</a></h3><p>提取器接口，定义了从测试结果中提取数据的方法。</p><h4 id="主要方法-3" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-3" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>extract(Object source, String expression)</code>: 从源数据中提取数据</li><li><code>getName()</code>: 获取提取器名称</li></ul><h3 id="jsonextractor-类" tabindex="-1">JsonExtractor 类 <a class="header-anchor" href="#jsonextractor-类" aria-label="Permalink to &quot;JsonExtractor 类&quot;">​</a></h3><p>JSON提取器实现，用于从JSON格式的响应中提取数据。</p><h4 id="主要方法-4" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-4" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>extractJson(String json, String jsonPath)</code>: 使用JSON路径表达式提取数据</li></ul><h3 id="regexextractor-类" tabindex="-1">RegexExtractor 类 <a class="header-anchor" href="#regexextractor-类" aria-label="Permalink to &quot;RegexExtractor 类&quot;">​</a></h3><p>正则提取器实现，用于使用正则表达式从文本中提取数据。</p><h4 id="主要方法-5" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-5" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>extractRegex(String text, String regex, int group)</code>: 使用正则表达式提取数据</li></ul><h3 id="headerextractor-类" tabindex="-1">HeaderExtractor 类 <a class="header-anchor" href="#headerextractor-类" aria-label="Permalink to &quot;HeaderExtractor 类&quot;">​</a></h3><p>HTTP头部提取器实现，用于从HTTP响应头部提取数据。</p><h4 id="主要方法-6" tabindex="-1">主要方法 <a class="header-anchor" href="#主要方法-6" aria-label="Permalink to &quot;主要方法&quot;">​</a></h4><ul><li><code>extractHeader(Map&amp;lt;String, String&amp;gt; headers, String headerName)</code>: 提取HTTP头部值</li></ul><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="json断言示例" tabindex="-1">JSON断言示例 <a class="header-anchor" href="#json断言示例" aria-label="Permalink to &quot;JSON断言示例&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 验证JSON响应中的字段值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assertions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;==&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assertions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;contains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="json提取器示例" tabindex="-1">JSON提取器示例 <a class="header-anchor" href="#json提取器示例" aria-label="Permalink to &quot;JSON提取器示例&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从JSON响应中提取数据并存储到变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extractor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;userId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extractor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$.data.token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;authToken&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="http响应断言示例" tabindex="-1">HTTP响应断言示例 <a class="header-anchor" href="#http响应断言示例" aria-label="Permalink to &quot;HTTP响应断言示例&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 验证HTTP状态码和头部信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assertions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">httpStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assertions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">httpHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;contains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,50)])])}const u=i(l,[["render",n]]);export{c as __pageData,u as default};
